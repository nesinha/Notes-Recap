What is a program?
Sequence of instructions to be executed in order.
__________________________________________________________________________________________________________________________________
What is a compiler?

Converts high level to machine level language. Combines all files of an application to run the process as a whole.
Compiles all .cpp/.c files . If comes across include in cpp files, compiles those header files

#include<-instruction for compiler.

error at anytime : 
step 1: goto each and every cpp file and compile them with the header into an object file for each file including cpp files.
step 2: linker: links all object files together including library files outside of project. gives exe file
step 3: runtime/debugging 

Runtime error example:

int x;
cin>>x;

user types a string then runtime error.
__________________________________________________________________________________________________________________________________

Function declaration and Function definition:

Fucntion Declaration: Declaring function before using it, like before main. 
Function Definition: Defining with the body.
__________________________________________________________________________________________________________________________________

scope and visibility:

scope: limited within a block/lifetime of block. Once you leave the scope/block, the variable declared in the scope does not exist outside scope/block.

__________________________________________________________________________________________________________________________________
continue:

skips rest part inside the loop after loop and continues the loop.
__________________________________________________________________________________________________________________________________
incuding Header file.

include "stdafx.h" <- within quotes mean file is local to project. Created header file in the project.
include <iostream> <- <> indicates, compiler knows its path by default. It is not local.
__________________________________________________________________________________________________________________________________
 Variables:
 
 int x - a storage space of type int.
 unsigned - starts from zero. usecase: represent age.
 signed - can be positive/negative
 short/long - depends on compiler weather unsigned short/long or signed short/long. Usually signed.
 const - to keep value constant throughout the life of program.
 bool - false = 0, true = anything not 0, including negative numbers

__________________________________________________________________________________________________________________________________
Types of interitence supported by C++
  Single, Mutiple, Mutilevel, Hybrid and Hierarchical 
__________________________________________________________________________________________________________________________________
Role of protected access specifier
  Can be accessed by the inherited class. Inaccessible outside that.
__________________________________________________________________________________________________________________________________
What is encapsulation?
  Binding data and fucntion acting on that data together in a class.
__________________________________________________________________________________________________________________________________
What is abstraction?
  Hiding internal implementation and only showing the necessary details.
__________________________________________________________________________________________________________________________________

